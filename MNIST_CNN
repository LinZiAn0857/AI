{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"MNIST_CNN","provenance":[],"authorship_tag":"ABX9TyNbig/Omfa6SksagsXEfiJJ"},"kernelspec":{"name":"python3","display_name":"Python 3"},"accelerator":"GPU"},"cells":[{"cell_type":"code","metadata":{"id":"k-Fsx-VaYOBf","colab_type":"code","outputId":"5b8f6604-0aa7-4233-c92d-6b0ab6377879","executionInfo":{"status":"ok","timestamp":1586393751792,"user_tz":-480,"elapsed":761,"user":{"displayName":"林子安","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmJvr1ZRWQNonweEfpHkk7DHmZgChz07pDGBnmBQ=s64","userId":"02736274092546709085"}},"colab":{"base_uri":"https://localhost:8080/","height":102}},"source":["%tensorflow_version 1.*"],"execution_count":0,"outputs":[{"output_type":"stream","text":["`%tensorflow_version` only switches the major version: 1.x or 2.x.\n","You set: `1.*`. This will be interpreted as: `1.x`.\n","\n","\n","TensorFlow 1.x selected.\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"laOm7Ko-bnQn","colab_type":"code","outputId":"e04b4ce1-aa50-48f2-aea5-124c116942ea","executionInfo":{"status":"ok","timestamp":1586393791606,"user_tz":-480,"elapsed":40570,"user":{"displayName":"林子安","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GgmJvr1ZRWQNonweEfpHkk7DHmZgChz07pDGBnmBQ=s64","userId":"02736274092546709085"}},"colab":{"base_uri":"https://localhost:8080/","height":1000}},"source":["from keras.datasets import mnist\n","from keras.utils import np_utils\n","import numpy as np\n","import matplotlib.pyplot as plt\n","np.random.seed(10)\n","\n","\n","(X_train, y_train), (X_test, y_test) = mnist.load_data()#載入 MNIST 訓練資料\n","print(\"X_train.shape={}, y_train.shape={}\".format(X_train.shape, y_train.shape))\n","\n","print(\"X_test.shape={}, y_test.shape={}\".format(X_test.shape, y_test.shape))\n","\n","\n","# 接著我們必須將X_train及X_test dataset由原本三維轉為四維矩陣以符合CNN的需求，這是因為RGB圖片的格式為為width, height, channels，加上ID數維度為4。MNIST圖片為灰階因此其channel為1，轉換後的shape為(ID, width, height, channel)\n","\n","\n","X_train = X_train.reshape(X_train.shape[0], 28, 28, 1).astype('float32')\n","X_test = X_test.reshape(X_test.shape[0], 28, 28, 1).astype('float32')\n","print(\"X_train.shape={}\".format(X_train.shape))\n","print(\"X_test.shape={}\".format(X_test.shape))\n","\n","\n","# 接下來將dataset的特徵值進行標準化，方法是除以255（因為圖像的像素點介於0~255之間），可讓所有的特徵值介於0與1之間。除了可提昇模型預測的準確度，梯度運算時也能更快收斂。\n","\n","\n","X_train = X_train / 255\n","X_test = X_test / 255\n","\n","\n","# Onehot encoding，將彼此間不相關且非有序的categories轉換為連續性且是有序數值。\n","\n","y_train = np_utils.to_categorical(y_train)\n","y_test_categories = y_test\n","y_test = np_utils.to_categorical(y_test)\n","\n","\n","from keras.models import Sequential\n","from keras.layers import Dense, Dropout, Flatten, Conv2D, MaxPooling2D\n","\n","model = Sequential()\n","model.add(Conv2D(filters=16, kernel_size=(5, 5), padding='same', input_shape=(28, 28, 1), activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Conv2D(filters=36, kernel_size=(5, 5), padding='same', activation='relu'))\n","model.add(MaxPooling2D(pool_size=(2, 2)))\n","model.add(Dropout(0.25))\n","model.add(Flatten())\n","model.add(Dense(10, activation='softmax'))\n","model.summary()     \n","\n","\n","\n","model.compile(loss='categorical_crossentropy', optimizer='adam', metrics=['accuracy'])\n","\n","\n","train_history=model.fit(x=X_train, y=y_train, validation_data=(X_test, y_test), validation_split=0.2, epochs=10, batch_size=300, verbose=2)\n","\n","\n","\n","def show_train_history(train_history, train, validation):\n","    plt.plot(train_history.history[train])\n","    plt.plot(train_history.history[validation])\n","    plt.title('Train History')\n","    plt.ylabel('Train')\n","    plt.xlabel('Epoch')\n","    plt.legend(['train', 'validation'], loc='center right')\n","    plt.show()\n","show_train_history(train_history, 'acc', 'val_acc')\n","show_train_history(train_history, 'loss', 'val_loss')\n","\n","\n","\n","scores = model.evaluate(X_test, y_test)# 顯示損失函數\n","scores[1]\n","\n","\n","# Confusion Matrix混淆矩陣\n","\n","\n","import pandas as pd\n","prediction = model.predict_classes(X_test)\n","print(y_test.shape)\n","pd.crosstab(y_test_categories, prediction, rownames=['label'], colnames=['predict'])\n"],"execution_count":0,"outputs":[{"output_type":"stream","text":["Using TensorFlow backend.\n"],"name":"stderr"},{"output_type":"stream","text":["X_train.shape=(60000, 28, 28), y_train.shape=(60000,)\n","X_test.shape=(10000, 28, 28), y_test.shape=(10000,)\n","X_train.shape=(60000, 28, 28, 1)\n","X_test.shape=(10000, 28, 28, 1)\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:66: The name tf.get_default_graph is deprecated. Please use tf.compat.v1.get_default_graph instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:541: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4432: The name tf.random_uniform is deprecated. Please use tf.random.uniform instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:4267: The name tf.nn.max_pool is deprecated. Please use tf.nn.max_pool2d instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:148: The name tf.placeholder_with_default is deprecated. Please use tf.compat.v1.placeholder_with_default instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3733: calling dropout (from tensorflow.python.ops.nn_ops) with keep_prob is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Please use `rate` instead of `keep_prob`. Rate should be set to `rate = 1 - keep_prob`.\n","Model: \"sequential_1\"\n","_________________________________________________________________\n","Layer (type)                 Output Shape              Param #   \n","=================================================================\n","conv2d_1 (Conv2D)            (None, 28, 28, 16)        416       \n","_________________________________________________________________\n","max_pooling2d_1 (MaxPooling2 (None, 14, 14, 16)        0         \n","_________________________________________________________________\n","conv2d_2 (Conv2D)            (None, 14, 14, 36)        14436     \n","_________________________________________________________________\n","max_pooling2d_2 (MaxPooling2 (None, 7, 7, 36)          0         \n","_________________________________________________________________\n","dropout_1 (Dropout)          (None, 7, 7, 36)          0         \n","_________________________________________________________________\n","flatten_1 (Flatten)          (None, 1764)              0         \n","_________________________________________________________________\n","dense_1 (Dense)              (None, 10)                17650     \n","=================================================================\n","Total params: 32,502\n","Trainable params: 32,502\n","Non-trainable params: 0\n","_________________________________________________________________\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/optimizers.py:793: The name tf.train.Optimizer is deprecated. Please use tf.compat.v1.train.Optimizer instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3576: The name tf.log is deprecated. Please use tf.math.log instead.\n","\n","WARNING:tensorflow:From /tensorflow-1.15.2/python3.6/tensorflow_core/python/ops/math_grad.py:1424: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1033: The name tf.assign_add is deprecated. Please use tf.compat.v1.assign_add instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:1020: The name tf.assign is deprecated. Please use tf.compat.v1.assign instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:3005: The name tf.Session is deprecated. Please use tf.compat.v1.Session instead.\n","\n","Train on 60000 samples, validate on 10000 samples\n","Epoch 1/10\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:190: The name tf.get_default_session is deprecated. Please use tf.compat.v1.get_default_session instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:197: The name tf.ConfigProto is deprecated. Please use tf.compat.v1.ConfigProto instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:207: The name tf.global_variables is deprecated. Please use tf.compat.v1.global_variables instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:216: The name tf.is_variable_initialized is deprecated. Please use tf.compat.v1.is_variable_initialized instead.\n","\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/keras/backend/tensorflow_backend.py:223: The name tf.variables_initializer is deprecated. Please use tf.compat.v1.variables_initializer instead.\n","\n"," - 15s - loss: 0.4421 - acc: 0.8734 - val_loss: 0.1209 - val_acc: 0.9644\n","Epoch 2/10\n"," - 2s - loss: 0.1161 - acc: 0.9649 - val_loss: 0.0659 - val_acc: 0.9792\n","Epoch 3/10\n"," - 2s - loss: 0.0792 - acc: 0.9759 - val_loss: 0.0583 - val_acc: 0.9803\n","Epoch 4/10\n"," - 2s - loss: 0.0651 - acc: 0.9797 - val_loss: 0.0447 - val_acc: 0.9849\n","Epoch 5/10\n"," - 2s - loss: 0.0549 - acc: 0.9834 - val_loss: 0.0369 - val_acc: 0.9888\n","Epoch 6/10\n"," - 2s - loss: 0.0482 - acc: 0.9850 - val_loss: 0.0343 - val_acc: 0.9885\n","Epoch 7/10\n"," - 2s - loss: 0.0430 - acc: 0.9869 - val_loss: 0.0340 - val_acc: 0.9889\n","Epoch 8/10\n"," - 2s - loss: 0.0395 - acc: 0.9871 - val_loss: 0.0294 - val_acc: 0.9909\n","Epoch 9/10\n"," - 2s - loss: 0.0353 - acc: 0.9890 - val_loss: 0.0279 - val_acc: 0.9912\n","Epoch 10/10\n"," - 2s - loss: 0.0341 - acc: 0.9890 - val_loss: 0.0279 - val_acc: 0.9909\n"],"name":"stdout"},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["10000/10000 [==============================] - 0s 48us/step\n","(10000, 10)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>predict</th>\n","      <th>0</th>\n","      <th>1</th>\n","      <th>2</th>\n","      <th>3</th>\n","      <th>4</th>\n","      <th>5</th>\n","      <th>6</th>\n","      <th>7</th>\n","      <th>8</th>\n","      <th>9</th>\n","    </tr>\n","    <tr>\n","      <th>label</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>978</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0</td>\n","      <td>1132</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1024</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1004</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>976</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>886</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>4</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>8</td>\n","      <td>938</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1015</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>962</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>994</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["predict    0     1     2     3    4    5    6     7    8    9\n","label                                                        \n","0        978     0     0     0    0    0    0     1    1    0\n","1          0  1132     2     0    0    0    0     1    0    0\n","2          2     2  1024     0    0    0    0     2    2    0\n","3          0     0     2  1004    0    2    0     0    2    0\n","4          0     0     1     0  976    0    0     0    2    3\n","5          2     0     0     3    0  886    1     0    0    0\n","6          4     2     0     0    3    8  938     0    3    0\n","7          0     2     8     1    0    0    0  1015    1    1\n","8          3     0     2     1    0    1    0     2  962    3\n","9          0     3     0     1    4    3    0     3    1  994"]},"metadata":{"tags":[]},"execution_count":2}]}]}